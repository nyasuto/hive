[tool:pytest]
# Pytest Configuration for Beehive Project
# Issue #23: テストスイート強化とコード品質向上

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = 
    bees
    tests

# Minimum version
minversion = 6.0

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=bees
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=90
    --disable-warnings

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    slow: Tests that take longer to run
    database: Tests that require database access
    network: Tests that require network access
    queen_bee: Tests specific to Queen Bee functionality
    worker_bee: Tests specific to Worker Bee functionality
    analyst_bee: Tests specific to Analyst Bee functionality
    workflow: Full workflow tests
    performance: Performance and load testing
    error_handling: Error handling and edge case tests

# Filter warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    # SQLite threading warnings
    ignore:.*SQLite.*thread.*:Warning
    # Pytest collection warnings
    ignore::pytest.PytestCollectionWarning

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (in seconds)
timeout = 300

# Coverage configuration
[coverage:run]
source = bees
omit = 
    */test_*.py
    */__pycache__/*
    */.*
    setup.py
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml