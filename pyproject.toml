[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "beehive"
version = "0.1.0"
description = "Claude Multi-Agent Development System (Beehive) - AIエージェントが協調して開発タスクを遂行するマルチエージェントシステム"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Beehive Team", email = "noreply@example.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.12"

dependencies = [
    # 基本依存関係は最小限に
]

# Hatch build configuration
[tool.hatch.build.targets.wheel]
packages = ["bees"]

[project.optional-dependencies]
# 開発用依存関係
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
]

# 型チェック・品質
quality = [
    "mypy>=1.5.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]

# セキュリティ・監査
security = [
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pip-audit>=2.6.0",
]

# ドキュメント生成
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
]

# パフォーマンス・プロファイリング  
performance = [
    "psutil>=5.9.0",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.0",
]

# 全ての開発用依存関係
all = [
    "beehive[dev,quality,security,docs,performance]",
]

[project.urls]
Repository = "https://github.com/nyasuto/hive"
Documentation = "https://github.com/nyasuto/hive#readme"
"Bug Tracker" = "https://github.com/nyasuto/hive/issues"

[project.scripts]
beehive = "bees.cli:main"

# Black設定
[tool.black]
line-length = 100
target-version = ["py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # 除外するディレクトリ
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | logs
)/
'''

# isort設定
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

# mypy設定
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
disallow_untyped_defs = false

# pytest設定
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=bees",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=85",
]
testpaths = [
    "tests",
    "bees",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "performance: Performance tests",
    "slow: Slow running tests",
    "mock_required: Tests that require mocking",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage設定
[tool.coverage.run]
source = ["bees"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/conftest.py",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Ruff設定（高速リンター）
[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "Q",  # flake8-quotes
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B904",  # exception chaining handled in custom exceptions
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["F401", "F811", "F841"]

# Bandit設定（セキュリティ）
[tool.bandit]
exclude_dirs = ["tests", "htmlcov", ".venv"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

# Hatch環境設定
[tool.hatch.envs.default]
dependencies = [
    "beehive[dev]",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=bees --cov=tests {args:tests}"
cov-report = ["test-cov", "coverage html"]
format = ["black {args:.}", "ruff --fix {args:.}"]
format-check = ["black --check {args:.}", "ruff {args:.}"]
type-check = "mypy {args:bees tests}"
security = ["bandit -r bees/", "safety check"]
quality = ["format-check", "type-check"]
all = ["quality", "security", "test-cov"]

[tool.hatch.envs.docs]
dependencies = [
    "beehive[docs]",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict"
serve = "mkdocs serve --dev-addr localhost:8000"